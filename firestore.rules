rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function incomingData() {
      return request.resource.data;
    }

    function validateMedicineAndBodyPartField(data) {
      let keys = data.keys();
      let fields = [
      'painRecordsID',
      'name',
      'memo',
      'createdAt',
      'updatedAt'
      ];
      return keys.hasAll(fields) && keys.hasOnly(fields)
             // painRecordsID: nullチェック、string型、painRecords存在チェック
             && (incomingData().painRecordsID != null ? (incomingData().painRecordsID is string) : true)
             // name: 存在チェック、string型、1文字以上100文字以内
             && validateString(incomingData().name, 1, 100)
             // memo: nullチェック、string型、0文字以上200文字以内
             && (incomingData().memo != null ? validateString(incomingData().memo, 0, 200) : true)
             // createdAt
             && incomingData().createdAt != null ? (incomingData().createdAt == request.time) : true
             // updatedAt
             && incomingData().updatedAt != null ? (incomingData().updatedAt == request.time) : true;
    }

    function validateString(text, min, max) {
      return text is string
             && min <= text.size()
             && text.size() <= max;
    }

    match /users/{userID} {
      allow read, write: if request.time < timestamp.date(2022, 12, 29);

      match /painRecords/{painRecordsID} {
        allow read: if request.time < timestamp.date(2022, 12, 29);
        allow write: if request.time < timestamp.date(2022, 12, 29);
        allow update: if request.time < timestamp.date(2022, 12, 29);
        allow delete: if request.time < timestamp.date(2022, 12, 29);

        match /medicines/{medicinesID} {
          allow read: if request.time < timestamp.date(2022, 12, 29);
          allow write: if request.time < timestamp.date(2022, 12, 29);
          allow update: if request.time < timestamp.date(2022, 12, 29);
          allow delete: if request.time < timestamp.date(2022, 12, 29);
        }

        match /bodyParts/{bodyPartsID} {
          allow read: if request.time < timestamp.date(2022, 12, 29);
          allow write: if request.time < timestamp.date(2022, 12, 29);
          allow update: if request.time < timestamp.date(2022, 12, 29);
          allow delete: if request.time < timestamp.date(2022, 12, 29);
        }

        match /photos/{photosID} {
          allow read: if request.time < timestamp.date(2022, 12, 29);
          allow write: if request.time < timestamp.date(2022, 12, 29);
          allow update: if request.time < timestamp.date(2022, 12, 29);
          allow delete: if request.time < timestamp.date(2022, 12, 29);
        }
      }

      match /medicines/{medicinesID} {
        // TODO ユーザーがログインしている、またはpainRecordsIDが一致している
        allow read : if request.time < timestamp.date(2022, 12, 29);
        allow create: if validateMedicineAndBodyPartField(incomingData());
        allow update: if request.time < timestamp.date(2022, 12, 29);
        allow delete: if request.time < timestamp.date(2022, 12, 29);
      }

      match /bodyParts/{bodyPartsID} {
        allow read: if request.time < timestamp.date(2022, 12, 29);
        allow create: if validateMedicineAndBodyPartField(incomingData());
        allow update: if request.time < timestamp.date(2022, 12, 29);
        allow delete: if request.time < timestamp.date(2022, 12, 29);
      }

      match /photos/{photosID} {
        allow read, write: if request.time < timestamp.date(2022, 12, 29);
      }
    }
  }
}
